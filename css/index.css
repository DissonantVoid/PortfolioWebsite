:root{
  --skill-box-size: 360px;
}


@keyframes main-bg-scroll {
  to{
    background-position: 100% -100%, 40% -40%;
  }
}

main{
  background: radial-gradient(#fff0, #fff0, var(--dark-purple));
}

.main-bg{
  position: relative;
  z-index: -1;
  display: grid;
  justify-content: center;
  align-items: center;
  min-height: 80vh;
  padding: 40px 0;
  background-image: url("../res/images/SpaceLayer2.png"), url("../res/images/SpaceLayer1.png");
  background-repeat: repeat;
  animation: main-bg-scroll 40s linear infinite;
}

.main-content{
  display: flex;
  justify-content: center;
  align-items: center;
  height: fit-content;
  max-width: 75vw;
  position: relative;
  padding: 3rem 1rem 4rem 1rem;
}

.main-content::before {
  z-index: -1;
  content: "";
  width: 100%;
  height: 100%;
  position: absolute;
  left: 0;
  background-color: var(--dark-purple);
  border-radius: 40px;
  opacity: 0.4;
}

.logo{
  width: 300px;
  margin-right: 20px;
}

.main-text > h1{
  font-weight: normal;
  color: var(--light);
  font-size: 5.5rem;
}

.main-text > h1 > span{
  font-weight: bold;
  color: var(--green);
}

.main-text > p{
  font-size: 2.65rem;
  margin-top: 1.2rem;
  line-height: 2.4rem;
  letter-spacing: 0.1rem;
  color: var(--light);
}

.main-text > p > .focal-sentence{
  font-size: 1.25em;
}

@media only screen and (max-width: 900px) {
  .main-content{
    flex-direction: column;
  }

  .logo{
    width: 200px;
    margin: 0;
  }

  .main-text > h1{
    text-align: center;
  }

  .main-text > p{
    font-size: 2.2rem;
    line-height: 1.6rem;
  }
}



.skills{
  background-color: var(--dark-purple);
  position: relative;
  overflow: hidden;
}

.skills > p{
  text-align: center;
  color: var(--light);
}

.skills-wrapper{
  display: grid;
  gap: 46px 14vw;
  margin-top: 20px;
  justify-content: center;
  grid-template-columns: repeat(2,var(--skill-box-size));
}

.skills-wrapper > li{
  border: 5px solid var(--light);
  height: var(--skill-box-size);
  background-image: url("../res/images/SkillBox.png");
  background-size: 200% 200%;
  background-repeat: no-repeat;
  box-shadow: 0 0 10px var(--light);
  position: relative;
  z-index: 1; /* so the circle can appear behind */
}

.skills-wrapper > li::after{
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: var(--black);
  opacity: 0;
}

.skills-wrapper > li:hover{
  border-color: var(--green);
}

.skill-programming{
}
.skill-pixelart{
  background-position-x: 100%;
}
.skill-music{
  background-position-y: 100%;
}
.skill-editing{
  background-position-x: 100%;
  background-position-y: 100%;
}

.skills-wrapper > li > h4{
  z-index: 1; /* display above dark overlay */
  text-align: center;
  font-size: 4.2rem;
  line-height: 3.2rem;
  text-decoration: underline;
  color: var(--light);
  position: absolute;
  top: 50%;
  left: 50%;
  pointer-events: none; /* ignore mouse, so skill sfx doesn't repeat when hovering over text */
  transform: translate(-50%, -50%);
  text-shadow: 0 0 4px var(--black),
               0 0 4px var(--black),
               0 0 4px var(--black),
               0 0 4px var(--black);
}

.skill-selection-highlighter{
  display: none;
  position: absolute;
  top: 0;
  left: 0;
  width: 200px;
  height: 200px;
  background-color: var(--green);
  pointer-events: none;
  border-radius: 20px;
  z-index: 0;
  transform-origin: center;
}
.visible-selection-highlighter{
  display: block;
  animation: skill-highlighter-expand 0.2s ease-out forwards;
}
@keyframes skill-highlighter-expand {
  to{
    --size: 400px;
    --offset: -100px; /* -half [size] + half highlighter size (100px) */
    width: var(--size);
    height: var(--size);
    transform: translate(var(--offset),var(--offset));
 }
}

@media (pointer: fine) {
  /* if user is using mouse, hide skill text untill hovered */
  .skills-wrapper > li:hover::after{
    opacity: 0.4;
  }
  
  .skills-wrapper > li > h4{
    opacity: 0;
  }

  .skills-wrapper > li:hover > h4{
    opacity: 1;
  }
}

@media only screen and (max-width: 900px) {
  .skills-wrapper{
    grid-template-columns: var(--skill-box-size);
  }
}



.contact{
  background-color: var(--purple);
  text-align: center;
  color: var(--light);
}

.email{
  position: relative;
  font-size: 2.6rem;
  background-color: var(--dark-purple);
  width: fit-content;
  min-width: 32vw;
  padding: 8px 12px;
  margin: 20px auto 0 auto;
}

.email-copy{
  display: none;
  position: absolute;
  top: 50%;
  right: 1px;
  transform: translateY(-50%);
  opacity: 0;
  border: none;
  background-image: url("../res/images/Copy.png");
  width: 64px;
  height: 64px;
  background-size: 300%;
  background-repeat: no-repeat;
}

.email-copy:hover{
  background-position-x: 50%;
}

.email-copy:active{
  background-position-x: 100%;
}

.email-hidden:hover{
  color: var(--green);
}

.email-revealed{
  background-color: var(--green);
  padding-right: 64px;
}

.email-revealed::after{
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: var(--dark-purple);
  animation: reveal-email 0.75s linear forwards;
}

.email-revealed > p{
  opacity: 0;
  color: var(--dark-purple);
  animation: reveal-opacity 1s linear 1.2s forwards;
}

.email-revealed > .email-copy{
  display: block;
  animation: reveal-opacity 1s linear 1.2s forwards;
}

@keyframes reveal-email {
  100%{
    width: 0;
    left: 50%;
  }
}

@keyframes reveal-opacity {
  100%{
    opacity: 100;
  }
}